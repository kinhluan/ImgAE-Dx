[tool.poetry]
name = "imgae-dx"
version = "0.1.0"
description = "Medical Image Anomaly Detection using Autoencoder architectures (U-Net vs Reversed Autoencoder)"
authors = ["Luan BHK <luanbhk@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/luanbhk/imgae-dx"
documentation = "https://github.com/luanbhk/imgae-dx/docs"
keywords = ["medical-imaging", "anomaly-detection", "autoencoder", "deep-learning", "chest-xray"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
packages = [{include = "imgae_dx", from = "src"}]

[tool.poetry.dependencies]
# Core Python
python = "^3.8.1"

# Deep Learning Framework
torch = "^2.0.0"
torchvision = "^0.15.0"

# Data Processing
numpy = "^1.24.0"
pandas = "^2.0.0"
pillow = "^10.0.0"

# Configuration Management
pyyaml = "^6.0"

# Scientific Computing
scikit-learn = "^1.3.0"

# Progress Tracking
tqdm = "^4.65.0"
kaggle = "^1.7.4.5"

[tool.poetry.group.dev.dependencies]
# Jupyter Environment
jupyter = "^1.0.0"
jupyterlab = "^4.0.0"
ipython = "^8.12.0"
ipykernel = "^6.23.0"

# Visualization
matplotlib = "^3.7.0"
seaborn = "^0.12.0"

# Model Analysis
torchsummary = "^1.5.1"

# Testing Framework
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"

# Code Quality
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.4.0"

# Documentation
sphinx = "^7.0.0"
sphinx-rtd-theme = "^1.2.0"

[tool.poetry.group.cloud.dependencies]
# Kaggle API Integration
kaggle = "^1.5.16"

# Experiment Tracking
wandb = "^0.15.0"

# Google Colab (optional for local dev - only available in Colab environment)
# google-colab = {version = "^1.0.0", optional = true}

[tool.poetry.group.viz.dependencies]
# Advanced Visualization
plotly = "^5.15.0"
# bokeh = "^3.2.0"  # Requires Python >=3.9, disabled for now

# Medical Imaging Specific
nibabel = "^5.1.0"  # For medical image formats
pydicom = "^2.4.0"  # For DICOM files

[tool.poetry.group.performance.dependencies]
# Performance Optimization
numba = "^0.57.0"
opencv-python = "^4.8.0"

# Memory Profiling
memory-profiler = "^0.61.0"

[tool.poetry.extras]
# Optional feature sets
# colab = ["google-colab"]  # Disabled - google-colab only available in Colab
all = ["kaggle", "wandb", "plotly", "nibabel", "pydicom", "numba", "opencv-python"]

[tool.poetry.scripts]
# CLI Commands for the project
imgae-train = "imgae_dx.cli:train"
imgae-evaluate = "imgae_dx.cli:evaluate"
imgae-config = "imgae_dx.cli:config"
imgae-notebook = "imgae_dx.cli:notebook"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# === TOOL CONFIGURATIONS ===

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["imgae_dx"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "sklearn.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "kaggle.*",
    "wandb.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=imgae_dx",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "-v"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]